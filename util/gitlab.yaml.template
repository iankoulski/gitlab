apiVersion: v1
kind: Namespace
metadata:
  name: gitlab
spec:
  finalizers:
  - kubernetes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-config-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-logs-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-data-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-runner-config-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-runner-data-pvc
  namespace: gitlab
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-sa
  namespace: gitlab
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-r
  namespace: gitlab
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-rb
  namespace: gitlab
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitlab-r
subjects:
  - kind: ServiceAccount
    name: gitlab-sa
    namespace: gitlab
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: gitlab 
  namespace: gitlab
spec:
  selector:
    matchLabels:
      app: gitlab
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      volumes:
      - name: gitlab-config-storage
        persistentVolumeClaim:
           claimName: gitlab-config-pvc
      - name: gitlab-logs-storage
        persistentVolumeClaim:
           claimName: gitlab-logs-pvc
      - name: gitlab-data-storage
        persistentVolumeClaim:
           claimName: gitlab-data-pvc
      - name: gitlab-runner-config-storage
        persistentVolumeClaim:
           claimName: gitlab-runner-config-pvc
      - name: gitlab-runner-data-storage
        persistentVolumeClaim:
           claimName: gitlab-runner-data-pvc
      serviceAccountName: gitlab-sa
      containers:
      - name: gitlab 
        image: ${REGISTRY}${IMAGE}${TAG}
        imagePullPolicy: Always
        securityContext:
          privileged: false
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: "nginx['enable'] = true; nginx['client_max_body_size'] = '500m'; nginx['redirect_http_to_https'] = true; nginx['redirect_http_to_https_port'] = 80; external_url '${GITLAB_EXTERNAL_URL}'; nginx['listen_addresses'] = ['0.0.0.0']; nginx['listen_port'] = '${GITLAB_HTTPS_PORT}'; nginx['listen_https'] = true; nginx['ssl_certificate'] = '/etc/gitlab/ssl/ssl-gitlab.crt'; nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/ssl-gitlab.key'; registry_external_url '${GITLAB_REGISTRY_EXTERNAL_URL}'; registry_nginx['enable'] = true; registry_nginx['listen_port'] = '${GITLAB_REGISTRY_HTTPS_PORT}'; registry_nginx['ssl_certificate'] = '/etc/gitlab/ssl/ssl-registry.crt'; registry_nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/ssl-registry.key'; gitlab_pages['enable'] = '${GITLAB_PAGES_ENABLE}'; gitlab_rails['pages_host'] = '${GITLAB_PAGES_HOSTNAME}'; pages_external_url '${GITLAB_PAGES_EXTERNAL_URL}'; gitlab_pages['external_http'] = '0.0.0.0:448'; gitlab_pages['inplace_chroot'] = 'true'; pages_nginx['enable'] = '${GITLAB_PAGES_ENABLE}'; pages_nginx['listen_port'] = '${GITLAB_PAGES_HTTPS_PORT}'; pages_nginx['ssl_certificate'] = '/etc/gitlab/ssl/ssl-pages.crt'; pages_nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/ssl-pages.key'; gitlab_pages['access_control'] = 'true'; gitlab_rails['backup_keep_time'] = ${GITLAB_BACKUP_KEEP_TIME};"
        - name: GITLAB_BACKUP_CRONTAB_LINE
          value: '${GITLAB_BACKUP_CRONTAB_LINE}'
        ports:
        - containerPort: ${GITLAB_HTTPS_PORT}
        - containerPort: ${GITLAB_REGISTRY_HTTPS_PORT}
        - containerPort: ${GITLAB_PAGES_HTTPS_PORT}
        - containerPort: 22 
        volumeMounts:
        - mountPath: "/etc/gitlab"
          name: gitlab-config-storage
        - mountPath: "/var/log/gitlab"
          name: gitlab-logs-storage
        - mountPath: "/var/opt/gitlab"
          name: gitlab-data-storage
        - mountPath: "/etc/gitlab-runner"
          name: gitlab-runner-config-storage
        - mountPath: "/var/opt/gitlab-runner"
          name: gitlab-runner-data-storage
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gitlab
  name: gitlab
  namespace: gitlab
spec:
  ports:
  - name: "gitlab-port"
    port: ${GITLAB_HTTPS_PORT}
    targetPort: ${GITLAB_HTTPS_PORT}
    nodePort: ${GITLAB_HTTPS_NODEPORT}
  - name: "registry-port"
    port: ${GITLAB_REGISTRY_HTTPS_PORT}
    targetPort: ${GITLAB_REGISTRY_HTTPS_PORT}
    nodePort: ${GITLAB_REGISTRY_HTTPS_NODEPORT}
  - name: "pages-port"
    port: ${GITLAB_PAGES_HTTPS_PORT}
    targetPort: ${GITLAB_PAGES_HTTPS_PORT}
    nodePort: ${GITLAB_PAGES_HTTPS_NODEPORT}
  selector:
    app: gitlab
  type: NodePort
